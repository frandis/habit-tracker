{"version":3,"sources":["store.js","reducers/habitReducer.js","components/habit.js","actions/habitActions.js","components/habits.js","components/navbar.js","components/form.js","components/reset.js","app.js","index.js"],"names":["reducer","combineReducers","habits","state","action","type","habit","payload","console","log","addedState","map","x","name","count","toBeUpdated","find","id","newState","longerState","concat","length","updatedState","filter","resetState","middleware","thunk","store","createStore","composeWithDevTools","applyMiddleware","Habit","props","dispatch","useDispatch","className","onClick","increment","decrement","remove","Habits","memo","useSelector","Navbar","activeHabits","Form","inputEl","useRef","onSubmit","event","preventDefault","newHabit","current","value","ref","Reset","App","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.fa0dadf0.chunk.js","sourcesContent":["import { createStore, combineReducers, applyMiddleware } from 'redux'\nimport thunk from 'redux-thunk'\nimport { composeWithDevTools } from 'redux-devtools-extension'\nimport { habitReducer } from './reducers/habitReducer'\n// import {productListReducers, productDetailsReducers} from './reducers/productReducers'\n// import {cartReducer} from './reducers/cartReducers'\n// import {userLoginReducer} from './reducers/userReducers'\nconst reducer = combineReducers({\n  habits: habitReducer,\n})\n\n// const cartItemsFromStorage = localStorage.getItem('cartItems') ? JSON.parse(localStorage.getItem('cartItems')) :[]\n// const userInfoFromStorage = localStorage.getItem('userInfo') ? JSON.parse(localStorage.getItem('userInfo')) :null\n\nconst initialState = {\n  habits: [\n    { id: 1, name: 'Reading', count: 0 },\n    { id: 2, name: 'Biking', count: 0 },\n  ],\n}\nconst middleware = [thunk]\n\nconst store = createStore(\n  reducer,\n  initialState,\n  composeWithDevTools(applyMiddleware(...middleware))\n)\n\nexport default store\n","export const habitReducer = (state = [], action) => {\n  switch (action.type) {\n    case 'INCREMENT':\n      const habit = action.payload\n      console.log(habit)\n      //   console.log(state)\n      //   const existHabit = state.find((x) => x.id === habit.id)\n      const addedState = state.map((x) =>\n        x.name === habit.name ? { ...x, count: x.count + 1 } : { ...x }\n      )\n\n      return addedState\n\n    case 'DECREMENT':\n      const toBeUpdated = state.find((x) => x.id === action.payload.id)\n      const count = toBeUpdated.count > 0 ? toBeUpdated.count - 1 : 0\n      const newState = state.map((x) =>\n        x.id === action.payload.id ? { ...x, count } : { ...x }\n      )\n      return newState\n\n    case 'ADD':\n      const longerState = state.concat({\n        id: state.length + 1,\n        name: action.payload,\n        count: 0,\n      })\n      console.log(longerState)\n      return longerState\n    case 'REMOVE':\n      const updatedState = state.filter((x) => x.id !== action.payload.id)\n      return updatedState\n    case 'RESET':\n      const resetState = state.map((x) => {\n        x.count = 0\n        return x\n      })\n      return resetState\n\n    default:\n      return state\n  }\n}\n","import React, { memo } from 'react'\nimport { useDispatch } from 'react-redux'\nimport { increment, decrement, remove } from '../actions/habitActions'\n\nconst Habit = (props) => {\n  const dispatch = useDispatch()\n  const handleIncrement = (habit) => {\n    dispatch(increment(habit))\n  }\n  const handleDecrement = (habit) => {\n    dispatch(decrement(habit))\n  }\n  // handleIncrement = () => {\n  //   this.props.onIncrement(this.props.habit)\n  // }\n  // handleDecrement = () => {\n  //   this.props.onDecrement(this.props.habit)\n  // }\n  const handleDelete = (habit) => {\n    dispatch(remove(habit))\n  }\n\n  const { name, count } = props.habit\n  return (\n    <li className='habit'>\n      <span className='habit-name'>{name}</span>\n      <span className='habit-count'>{count}</span>\n      <button\n        className='habit-button habit-increase'\n        onClick={() => handleIncrement(props.habit)}\n      >\n        <i className='fas fa-plus-square'></i>\n      </button>\n      <button\n        className='habit-button habit-decrease'\n        onClick={() => handleDecrement(props.habit)}\n      >\n        <i className='fas fa-minus-square'></i>\n      </button>\n      <button\n        className='habit-button habit-delete'\n        onClick={() => handleDelete(props.habit)}\n      >\n        <i className='fas fa-trash'></i>\n      </button>\n    </li>\n  )\n}\n\nexport default Habit\n","// export const removeFromCart = (id) => (dispatch, getState) => {\n//     dispatch({\n//         type: CART_REMOVE_ITEM,\n//         payload: id\n//     })\n//     localStorage.setItem('cartItems', JSON.stringify(getState().cart.cartItems))\n// }\n\nexport const increment = (habit) => (dispatch) => {\n  dispatch({\n    type: 'INCREMENT',\n    payload: habit,\n  })\n}\n\nexport const decrement = (habit) => (dispatch) => {\n  dispatch({\n    type: 'DECREMENT',\n    payload: habit,\n  })\n}\n\nexport const add = (habit) => (dispatch) => {\n  dispatch({\n    type: 'ADD',\n    payload: habit,\n  })\n}\n\nexport const remove = (habit) => (dispatch) => {\n  dispatch({\n    type: 'REMOVE',\n    payload: habit,\n  })\n}\n\nexport const reset = () => (dispatch) => {\n  dispatch({\n    type: 'RESET',\n  })\n}\n","import React, { memo } from 'react'\nimport { useSelector } from 'react-redux'\n\nimport Habit from './habit'\n\nconst Habits = memo(() => {\n  const habits = useSelector((state) => state.habits)\n  console.log(habits)\n\n  // state = {\n  //   habits: [\n  //     { id: 1, name: 'Reading', count: 0 },\n  //     { id: 2, name: 'Coding', count: 0 },\n  //     { id: 3, name: 'Biking', count: 0 },\n  //   ],\n  // }\n  // handleIncrement = (habit) => {\n  //   const habits = [...this.state.habits]\n  //   const index = habits.indexOf(habit)\n  //   habits[index].count++\n  //   this.setState({ habits })\n  //   console.log(this.state)\n  // }\n\n  // handleDecrement = (habit) => {\n  //   const habits = [...this.state.habits]\n  //   const index = habits.indexOf(habit)\n  //   const count = habits[index].count - 1\n  //   habits[index].count = count < 0 ? 0 : count\n  //   this.setState({ habits })\n  //   console.log(this.state)\n  // }\n  // handleDelete = (habit) => {\n  //   const habits = this.state.habits.filter((item) => item.id !== habit.id)\n  //   this.setState({ habits })\n  // }\n\n  // render() {\n  return (\n    <ul>\n      {habits.map((habit) => (\n        <Habit\n          key={habit.id}\n          habit={habit}\n          // onIncrement={this.handleIncrement}\n          // onDecrement={this.handleDecrement}\n          // onDelete={this.handleDelete}\n        />\n      ))}\n    </ul>\n  )\n})\n// }\n\nexport default Habits\n","import React, { memo } from 'react'\nimport { useSelector } from 'react-redux'\n\n// import 'semantic-ui/dist/semantic.min.css'\n\nconst Navbar = memo(() => {\n  const habits = useSelector((state) => state.habits)\n  const activeHabits = habits.filter((x) => x.count > 0).length\n  return (\n    <nav>\n      <div className='navbar'>\n        <i className='navbar-logo fas fa-leaf'></i>\n        <span className='navbar-text'>Habit Tracker</span>\n        <span className='navbar-count'>{activeHabits}</span>\n      </div>\n    </nav>\n  )\n})\n\nexport default Navbar\n","import React, { useRef } from 'react'\n\nimport { useDispatch } from 'react-redux'\nimport { add } from '../actions/habitActions'\nconst Form = () => {\n  const inputEl = useRef(null)\n  const dispatch = useDispatch()\n  const handleAdd = (event) => {\n    event.preventDefault()\n    const newHabit = inputEl.current.value\n    newHabit && dispatch(add(newHabit))\n    inputEl.current.value = ''\n  }\n  return (\n    <form className='habit-form' onSubmit={handleAdd}>\n      <label className='form-input'>\n        New Habit:\n        <input\n          ref={inputEl}\n          className='form-inputBox'\n          type='text'\n          name='newHabit'\n        />\n      </label>\n      <input className='add-button' type='submit' value='Add' />\n    </form>\n  )\n}\n\nexport default Form\n","import React from 'react'\nimport { useDispatch } from 'react-redux'\n\nimport { reset } from '../actions/habitActions'\n\nconst Reset = () => {\n  const dispatch = useDispatch()\n\n  const resetHandler = () => {\n    dispatch(reset())\n  }\n  return (\n    <button className='reset-button' onClick={resetHandler}>\n      Reset All\n    </button>\n  )\n}\n\nexport default Reset\n","import React, { Component } from 'react'\n\nimport './app.css'\nimport Habits from './components/habits'\nimport Navbar from './components/navbar'\nimport Form from './components/form'\nimport Reset from './components/reset'\n\nclass App extends Component {\n  render() {\n    return (\n      <>\n        <Navbar />\n        <Form />\n        <Habits />\n        <Reset />\n      </>\n    )\n  }\n}\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport { Provider } from 'react-redux'\nimport store from './store'\nimport './index.css'\nimport App from './app'\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n)\n"],"sourceRoot":""}